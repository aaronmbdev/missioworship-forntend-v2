name: Pack and ship

on:
  workflow_dispatch:
  pull_request:
    types:
      - closed

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3

    - name: Set up Git
      run: |
        git config user.name "Github workflow"
        git config user.email "aaron@mbotton.com"

    - name: Use Node.js v14.21.1
      uses: actions/setup-node@v3
      with:
        node-version: 14.21.1
        cache: 'npm'

    - name: Install Npm 6.14.17
      run: npm install -g npm@6.14.17

    - name: Bump version
      run: npm version patch

    - name: Install dependencies 
      run: npm install

    - name: Build Frontend
      run: npm run build --prod

    - uses: actions/upload-artifact@v3
      with:
        name: frontend
        path: build/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: sergeysova/jq-action@v2
        id: version
        with:
          cmd: 'jq .version package.json -r'

      - uses: actions/download-artifact@v3
        with:
          name: frontend
          path: ./build

      - name: Release to GitHub
        uses: opspresso/action-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: v${{ steps.version.outputs.value }}
          NAME: v${{ steps.version.outputs.value }}
          ASSET_PATH: ./build/

      - uses: ncipollo/release-action@v1
        with:
          artifacts: ./build/*
          generateReleaseNotes: true
          makeLatest: true
          name: v${{ steps.version.outputs.value }}
          tag: v${{ steps.version.outputs.value }}
          skipIfReleaseExists: true
          token: ${{ secrets.GITHUB_TOKEN_AARON }}


  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
        contents: read
        packages: write
    steps:
    - uses: actions/checkout@v3

    - uses: actions/download-artifact@v3
      with:
        name: frontend
        path: ./build

    - name: Deploy to Netlify
      uses: nwtgck/actions-netlify@v2.0
      with:
        publish-dir: './build/'
        production-branch: main
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy from GitHub Actions"
        enable-pull-request-comment: false
        enable-commit-comment: true
        overwrites-pull-request-comment: true
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID_MISSIO_WORSHIP }}
      timeout-minutes: 1

    - name: Finishing notification
      uses: xinthink/action-telegram@v1.1
      with:
        botToken: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        chatId: ${{ secrets.TELEGRAM_CHAT_ID }}
        jobStatus: ${{ job.status }}
        skipSuccess: false
